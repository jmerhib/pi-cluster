apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: pihole
  name: pihole
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pihole
  strategy: {}
  template:
    metadata:
      labels:
        app: pihole
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: storage
                    operator: In
                    values: ["node01"]
      containers:
        - image: pihole/pihole:2025.08.0
          name: pihole
          volumeMounts:
            - name: pi-vol
              mountPath: "/etc/pihole"
            - name: pi-dns
              mountPath: "/etc/dnsmasq.d"
          ports:
            - name: dns-tcp
              containerPort: 53
              protocol: TCP
            - name: dns-udp
              containerPort: 53
              protocol: UDP
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: https
              containerPort: 8443
              protocol: TCP
          env:
            - name: TZ
              value: "America/New_York"
            - name: FTLCONF_dns_listeningMode
              value: "all"
            - name: FTLCONF_webserver_port
              value: "8080"
            # - name: FTLCONF_webserver_https_port
            #   value: "8443"
            - name: FTLCONF_webserver_api_password
              valueFrom:
                secretKeyRef:
                  name: webserver-creds
                  key: FTLCONF_webserver_api_password
          resources: {}
      volumes:
        - name: pi-vol
          persistentVolumeClaim:
            claimName: pihole-config-pvc
        - name: pi-dns
          persistentVolumeClaim:
            claimName: pihole-dns-pvc
      restartPolicy: Always
status: {}
